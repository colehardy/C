#include<stdio.h>
#include<malloc.h>

typedef struct Node
{
	char data;
	struct Node *Lchild;
	struct Node *Rchild;
}BTnode,*Btree;

void CreateBtree(Btree bt)
{
	char ch;
	ch=getchar();
	if(ch=='.')
		bt=NULL;
	else
	{
		bt=(Btree)malloc(sizeof(BTnode));
		bt->data=ch;
		CreateBtree(bt->Lchild);
		CreateBtree(bt->Rchild);
	}
}

void preorder(Btree root)
{
	if(root!=NULL)
	{
		printf("%c_",root->data);
		preorder(root->Lchild);
		preorder(root->Rchild);
	}
}

void InOrder(Btree root)
{
	if(root!=NULL)
	{
		InOrder(root->Lchild);
		printf("%c_",root->data);
		InOrder(root->Rchild);
	}
}

void PostOrder(Btree root)
{
	if(root!=NULL)
	{
		PostOrder(root->Lchild);
		PostOrder(root->Rchild);
		printf("%c_",root->data);
	}
}

void main()
{
	Btree BT;
	CreateBtree(BT);
	printf("先根遍历:");
	preorder(BT);
	printf("\n");
	printf("中根遍历:");
	InOrder(BT);
	printf("\n");
	printf("后根遍历:");
	PostOrder(BT);
	printf("\n");
}
